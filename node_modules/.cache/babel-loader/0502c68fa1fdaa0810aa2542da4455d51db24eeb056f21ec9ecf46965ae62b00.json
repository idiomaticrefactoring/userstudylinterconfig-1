{"ast":null,"code":"import \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ReportTuple from './ReportTuple.vue';\nimport { saveAs } from 'file-saver';\nexport default {\n  name: \"Report\",\n  components: {\n    ReportTuple: ReportTuple\n  },\n  data: function data() {\n    return {\n      questionIndex: 0,\n      minutes: 5,\n      seconds: 0,\n      tupleIndex: 1,\n      ableEdit: true,\n      answers: [],\n      finalStoredData: {},\n      questions: [{\n        title: 'Refactor the following Python code with list comprehension, e.g., a= [1 for i in range(2)]. <p><a href=\"https://github.com/yenchenlin/DeepLearningFlappyBird/blob/5a08d405b68facb784c7dc06ae0f6ad341c2a5a3/deep_q_network.py#L78-L204\">Right Click the Link to See Code in A New Tab!</a></p>',\n        references: \"<b>code (line 163):</b>for i in range(0, len(minibatch)): \\n \\\r\n    terminal = minibatch[i][4] \\n \\\r\n    if terminal: \\n \\\r\n        y_batch.append(r_batch[i]) \\n \\\r\n    else: \\n \\\r\n        y_batch.append(r_batch[i] + GAMMA * np.max(readout_j1_batch[i])) \\n \\\r\n<b>refactored code:</b>y_batch = [r_batch[i] if minibatch[i][4] else r_batch[i] + GAMMA * np.max(readout_j1_batch[i]) for i in range(0, len(minibatch))]\"\n      }, {\n        title: 'Refactor the following Python code with a For statement with multiple targets, e.g., <code>\"for i in a: print(i[0]) can be refactored into for i_0, *i_remain in a: print(i_0)\"</code>. <p><a href=\"https://github.com/franMarz/TexTools-Blender/blob/d2c324f9f4e986c2cdb00da6f0fd0999bb871203/utilities_uv.py#L137-L207\">Right Click the Link to See Code in A New Tab!</a></p>',\n        references: \"<b>code 1 (line 195):</b>for uv_set in settings.selection_uv_loops: \\n \\\r\n    for loop in bm.faces[uv_set[0]].loops: \\n \\\r\n        if loop.vert.index == uv_set[1]: \\n \\\r\n            loop[uv_layers].select = True \\n \\\r\n            break \\n \\\r\n<b>refactored code1:</b>for (uv_set_0, uv_set_1, *uv_set_len) in settings.selection_uv_loops: \\n \\\r\n    for loop in bm.faces[uv_set_0].loops: \\n \\\r\n        if loop.vert.index == uv_set_1: \\n \\\r\n            loop[uv_layers].select = True \\n \\\r\n            break\"\n      }, {\n        title: 'Refactor the following Python code with chain comparison, e.g., <code>2 > a > 1</code>. <p><a href=\"https://github.com/JiaxuanYou/graph-generation/blob/3444b8ad2fd7ecb6ade45086b4c75f8e2e9f29d1/create_graphs.py#L7-L153\">Right Click the Link to See Code in A New Tab!</a></p>',\n        references: \"<b>code 1 (line 137):</b>G_ego.number_of_nodes() >= 50 and G_ego.number_of_nodes() <= 400 \\n \\\r\n<b>refactored code1:</b>50 <= G_ego.number_of_nodes() <= 400 \\n \\\r\n \\n \\\r\n<b>code 2:  (line 147)</b>G_ego.number_of_nodes() >= 4 and G_ego.number_of_nodes() <= 20 \\n \\\r\n<b>refactored code2:4 <= G_ego.number_of_nodes() <= 20\"\n      }, {\n        title: 'Refactor the following Python code with While/For statement with else clause, e.g., <code>\"for i in a:\\n \\ pass \\n \\ else: \\n \\ pass\"</code>. <p><a href=\"https://github.com/forseti-security/forseti-security/blob/9069bfb04e818e51f484d860a249de0d578d4cf3/google/cloud/forseti/services/dao.py#L841-L872\">Right Click the Link to See Code in A New Tab!</a></p>',\n        references: \"<b>code 1 (line 861):</b>is_root = True \\n \\\r\nfor children in resource_hierarchy.values(): \\n \\\r\n    if parent in children: \\n \\\r\n        is_root = False \\n \\\r\n        break \\n \\\r\nif is_root: \\n \\\r\n    root = parent \\n \\\r\n<b>refactored code1:</b>for children in resource_hierarchy.values(): \\n \\\r\n    if parent in children: \\n \\\r\n        break \\n \\\r\nelse: \\n \\\r\n    root = parent\"\n      }, {\n        title: 'Refactor the following Python code with set comprehension, e.g., a= {i for i in range(2)}. <p><a href=\"https://github.com/mozilla/pontoon/blob/3a95b7bb3c3982cad3320898ee9b791dfa1267ed/pontoon/insights/tasks.py#L386-L429\">Right Click the Link to See Code in A New Tab!</a></p>',\n        references: \"<b>code (line 400):</b>for user in privileged_users: \\n \\\r\n    manager = user['managers_group__user'] \\n \\\r\n    last_login = user['managers_group__user__last_login'] \\n \\\r\n    if last_login: \\n \\\r\n        if last_login + relativedelta(months=months) > start_of_today: \\n \\\r\n            active_managers.add(manager) \\n \\\r\n<b>refactored code:</b>active_managers = {user['managers_group__user'] for user in privileged_users if user['managers_group__user__last_login'] if user['managers_group__user__last_login'] + relativedelta(months=months) > start_of_today}\"\n      }, {\n        title: 'Refactor the following Python code with chain comparison, e.g., <code>2 > a > 1</code>. <p><a href=\"https://github.com/wbond/package_control/blob/ec6555920e41d195a1721c7a0bcb6fa68e4098aa/package_control/deps/oscrypto/trust_list.py#L65-L138\">Right Click the Link to See Code in A New Tab!</a></p>',\n        references: \"<b>code 1 (line 110):</b>trust_oids != empty_set and any_purpose not in trust_oids and (win_server_auth not in trust_oids) \\n \\\r\n<b>refactored code1:</b>any_purpose not in trust_oids != empty_set and win_server_auth not in trust_oids \\n \\\r\n \\n \\\r\n<b>code 2:  (line 121)</b>trust_oids != empty_set and any_purpose not in trust_oids and (apple_ssl not in trust_oids) \\n \\\r\n<b>refactored code2:any_purpose not in trust_oids != empty_set and apple_ssl not in trust_oids\"\n      }, {\n        title: 'Refactor the following Python code with an Assignment statement using a value to assign multiple targets, e.g., <code>\"a=1; b=1 can be refactored into a=b=1\"</code>. <p><a href=\"https://github.com/IntelLabs/coach/blob/2c60cb5acd8cd3c9c381a5066c208e69fc273c7b/rl_coach/dashboard_components/signals_file_base.py#L26-L39\">Right Click the Link to See Code in A New Tab!</a></p>',\n        references: \"<b>code 1 (line 28):</b>self.full_csv_path = '' \\n \\\r\nself.dir = '' \\n \\\r\nself.filename = '' \\n \\\r\n<b>refactored code1:</b>self.full_csv_path, self.dir, self.filename = '' \\n \\\r\n \\n \\\r\n<b>code 2 (line 33):</b>self.csv = None \\n \\\r\nself.bokeh_source = None \\n \\\r\nself.bokeh_source_orig = None \\n \\\r\nself.last_modified = None \\n \\\r\n<b>refactored code2:</b>self.csv, self.bokeh_source, self.bokeh_source_orig, self.last_modified = None \\n \\\r\n \\n \\\r\n<b>code 3 (line 38):</b>self.separate_files = False \\n \\\r\nself.last_reload_data_fix = False \\n \\\r\n<b>refactored code3:</b>self.separate_files, self.last_reload_data_fix = False\"\n      }, {\n        title: 'Refactor the following Python code with a For statement with multiple targets, e.g., <code>\"for i in a: print(i[0]) can be refactored into for i_0, *i_remain in a: print(i_0)\"</code>. <p><a href=\"https://github.com/chrismaddalena/ODIN/blob/03fb0044fe658df4d67ffbb8223060958537f17e/lib/htmlreporter.py#L551-L612\">Right Click the Link to See Code in A New Tab!</a></p>',\n        references: \"<b>code 1 (line 578):</b>for row in frontable: \\n \\\r\n    content += '<tr><td>{}</td><td>{}</td><td>{}</td></tr>'.format(row[0], row[1], row[2]) \\n \\\r\n<b>refactored code1:</b>for (row_0, row_1, row_2, *row_len) in subdomains: \\n \\\r\n    content += '<tr><td>{}</td><td>{}</td><td>{}</td></tr>'.format(row_0, row_1, row_2) \\n \\\r\n \\n \\\r\n<b>code 2 (line 592):</b>for row in takeovers: \\n \\\r\n    content += '<tr><td>{}</td><td>{}</td><td>{}</td></tr>'.format(row[0], row[1], row[2]) \\n \\\r\n<b>refactored code2:</b>for (row_0, row_1, row_2, *row_len) in takeovers: \\n \\\r\n    content += '<tr><td>{}</td><td>{}</td><td>{}</td></tr>'.format(row_0, row_1, row_2) \\n \\\r\n \\n \\\r\n<b>code 3 (line 605):</b>for row in subdomains: \\n \\\r\n    content += '<tr><td>{}</td><td>{}</td><td>{}</td></tr>'.format(row[0], row[1], row[2]) \\n \\\r\n<b>refactored code3:</b>for (row_0, row_1, row_2, *row_len) in subdomains: \\n \\\r\n    content += '<tr><td>{}</td><td>{}</td><td>{}</td></tr>'.format(row_0, row_1, row_2)\"\n      }, {\n        title: 'Refactor the following Python code with While/For statement with else clause, e.g., <code>\"for i in a:\\n \\ pass \\n \\ else: \\n \\ pass\"</code>. <p><a href=\"https://github.com/DLLXW/data-science-competition/blob/03490a7ea8e6297211fe8709b61ddad251ae51dd/else/%E5%A4%A9%E9%A9%AC%E6%9D%AF--AI%2Bz%E6%99%BA%E8%83%BD%E8%B4%A8%E6%A3%80/code/uer/utils/tokenizer.py#L350-L397\">Right Click the Link to See Code in A New Tab!</a></p>',\n        references: \"<b>code 1 (line 376):</b>is_bad = False \\n \\\r\nwhile start < len(chars): \\n \\\r\n    end = len(chars) \\n \\\r\n    cur_substr = None \\n \\\r\n    while start < end: \\n \\\r\n        substr = ''.join(chars[start:end]) \\n \\\r\n        if start > 0: \\n \\\r\n            substr = '##' + six.ensure_str(substr) \\n \\\r\n        if substr in self.vocab: \\n \\\r\n            cur_substr = substr \\n \\\r\n            break \\n \\\r\n        end -= 1 \\n \\\r\n    if cur_substr is None: \\n \\\r\n        is_bad = True \\n \\\r\n        break \\n \\\r\n    sub_tokens.append(cur_substr) \\n \\\r\n    start = end \\n \\\r\nif is_bad: \\n \\\r\n    output_tokens.append(self.unk_token) \\n \\\r\nelse: \\n \\\r\n    output_tokens.extend(sub_tokens) \\n \\\r\n<b>refactored code1:</b>cur_substr = None \\n \\\r\nwhile start < len(chars): \\n \\\r\n    end = len(chars) \\n \\\r\n    cur_substr = None \\n \\\r\n    while start < end: \\n \\\r\n        substr = ''.join(chars[start:end]) \\n \\\r\n        if start > 0: \\n \\\r\n            substr = '##' + six.ensure_str(substr) \\n \\\r\n        if substr in self.vocab: \\n \\\r\n            cur_substr = substr \\n \\\r\n            break \\n \\\r\n        end -= 1 \\n \\\r\n    if cur_substr is None: \\n \\\r\n        output_tokens.append(self.unk_token) \\n \\\r\n        break \\n \\\r\n    sub_tokens.append(cur_substr) \\n \\\r\n    start = end \\n \\\r\nelse: \\n \\\r\n    output_tokens.extend(sub_tokens) \\n \\\r\n \\n \\\r\n<b>code 2 (line 379): </b>cur_substr = None \\n \\\r\nwhile start < end: \\n \\\r\n    substr = ''.join(chars[start:end]) \\n \\\r\n    if start > 0: \\n \\\r\n        substr = '##' + six.ensure_str(substr) \\n \\\r\n    if substr in self.vocab: \\n \\\r\n        cur_substr = substr \\n \\\r\n        break \\n \\\r\n    end -= 1 \\n \\\r\nif cur_substr is None: \\n \\\r\n    is_bad = True \\n \\\r\n    break \\n \\\r\n<b>refactored code2:</b>while start < end: \\n \\\r\n    substr = ''.join(chars[start:end]) \\n \\\r\n    if start > 0: \\n \\\r\n        substr = '##' + six.ensure_str(substr) \\n \\\r\n    if substr in self.vocab: \\n \\\r\n        cur_substr = substr \\n \\\r\n        break \\n \\\r\n    end -= 1 \\n \\\r\nelse: \\n \\\r\n    is_bad = True \\n \\\r\n    break\"\n      }, {\n        title: 'Refactor the following Python code with Starred in Function Calls, e.g., <code>\"func(a[0],a[1]) can be refactored into func(*a[:2])\"</code>. <p><a href=\"https://github.com/neuralchen/SimSwap/blob/a5f6dea67398eec9ee71e156f7ad15dbd7ce4977/test_video_swap_multispecific.py#L33-L98\">Right Click the Link to See Code in A New Tab!</a></p>',\n        references: \"<b>code 1 (line 65):</b>specific_person.shape[0], specific_person.shape[1], specific_person.shape[2] \\n \\\r\n<b>refactored code1:</b>*specific_person.shape[:3] \\n \\\r\n \\n \\\r\n<b>code 2 (line 84):</b>img_a.shape[0], img_a.shape[1], img_a.shape[2] \\n \\\r\n<b>refactored code2:</b>*img_a.shape[:3]\"\n      }, {\n        title: 'Refactor the following Python code with list comprehension, e.g., a= [1 for i in range(2)]. <p><a href=\"https://github.com/microsoft/nni/blob/767ed7f22e1e588ce76cbbecb6c6a4a76a309805/nni/algorithms/hpo/networkmorphism_tuner/graph.py#L866-L908\">Right Click the Link to See Code in A New Tab!</a></p>',\n        references: \"<b>code 1 (line 877):</b>type_pairs = [] \\n \\\r\nfor item in graph.operation_history: \\n \\\r\n    if item[0] == 'to_deeper_model': \\n \\\r\n        operation_history.append([item[0], item[1], layer_description_extractor(item[2], graph.node_to_id)]) \\n \\\r\n    else: \\n \\\r\n        operation_history.append(item) \\n \\\r\n\\n \\\r\n<b>refactored code 1:</b>operation_history = [[item[0], item[1], layer_description_extractor(item[2], graph.node_to_id)] if item[0] == 'to_deeper_model' else item for item in graph.operation_history] \\n \\\r\n\\n \\\r\n<b>code 2 (line 894):</b>for node in graph.node_list: \\n \\\r\n    node_id = graph.node_to_id[node] \\n \\\r\n    node_information = node.shape \\n \\\r\n    node_list.append((node_id, node_information)) \\n \\\r\n<b>refactored code 2:</b>node_list = [(graph.node_to_id[node], node.shape) for node in graph.node_list] \\n \\\r\n\\n \\\r\n<b>code 3 (line 899):</b>for (layer_id, item) in enumerate(graph.layer_list): \\n \\\r\n    layer = graph.layer_list[layer_id] \\n \\\r\n    layer_information = layer_description_extractor(layer, graph.node_to_id) \\n \\\r\n    layer_list.append((layer_id, layer_information)) \\n \\\r\n<b>refactored code 3:</b>layer_list = [(layer_id, layer_description_extractor(graph.layer_list[layer_id], graph.node_to_id)) for (layer_id, item) in enumerate(graph.layer_list)]\"\n      }, {\n        title: 'Refactor the following Python code with an Assignment statement using a value to assign multiple targets, e.g., <code>\"a=1; b=1 can be refactored into a=b=1\"</code>. <p><a href=\"https://github.com/ansible/ansible-modules-extras/blob/f216ba8e0616bc8ad8794c22d4b48e1ab18886cf/cloud/rackspace/rax_mon_check.py#L144-L262\">Right Click the Link to See Code in A New Tab!</a></p>',\n        references: \"<b>code 1 (line 183):</b>should_delete = False \\n \\\r\nshould_create = False \\n \\\r\nshould_update = False \\n \\\r\n<b>refactored code1:</b>should_delete, should_create, should_update = False\"\n      }, {\n        title: 'Refactor the following Python code with truth test, e.g., <code>a != [] can be refactored into a</code>. <p><a href=\"https://github.com/django/django/blob/c709a748ce6e0759e415a0e3544e0f4ad3d30f8b/django/http/multipartparser.py#L132-L364\">Right Click the Link to See Code in A New Tab!</a></p>',\n        references: \"<b>code 1 (line 146):</b>self._content_length == 0 \\n \\\r\n<b>refactored code1:</b>not self._content_length \\n \\\r\n \\n \\\r\n<b>code 2 (line 309):</b>remaining != 0 \\n \\\r\n<b>refactored code2:remaining\"\n      }, {\n        title: 'Refactor the following Python code with Assignment with multiple targets, e.g., <code>\"a = 1; b = c can be refactored into a, b = 1, c pass\"</code>. <p><a href=\"https://github.com/diffgram/diffgram/blob/5bf45ff076ecc9b3192eedae94d2f515cca30edf/default/tests/methods/event/test_user_visit_history.py#L18-L36\">Right Click the Link to See Code in A New Tab!</a></p>',\n        references: \"<b>code 1 (line 33):</b>self.project = project_data['project'] \\n \\\r\nself.project_data = project_data \\n \\\r\n<b>refactored code1:</b>self.project , self.project_data  = project_data['project'], project_data\"\n      }, {\n        title: 'Refactor the following Python code with Starred in Function Calls, e.g., <code>\"func(a[0],a[1]) can be refactored into func(*a[:2])\"</code>. <p><a href=\"https://github.com/open-mmlab/OpenPCDet/blob/255db8f02a8bd07211d2c91f54602d63c4c93356/pcdet/ops/pointnet2/pointnet2_batch/pointnet2_modules.py#L61-L99\">Right Click the Link to See Code in A New Tab!</a></p>',\n        references: \"<b>code 1 (line 93):</b>mlp_spec[k], mlp_spec[k + 1] \\n \\\r\n<b>refactored code1:</b>*mlp_spec[k:k+2]\"\n      }, {\n        title: 'Refactor the following Python code with fstring to format a string, e.g., <code>a=world; \"hello: %s\" % a be refactored into f\"hello:{a}\"</code>. <p><a href=\"https://github.com/speechbrain/speechbrain/blob/d71a7e018738329fe9a7951d2e9457d52f94edad/recipes/KsponSpeech/ksponspeech_prepare.py#L136-L204\">Right Click the Link to See Code in A New Tab!</a></p>',\n        references: \"<b>code 1 (line 163):</b>'Creating csv lists in  %s...' % csv_file \\n \\\r\n<b>refactored code1:</b>f'Creating csv lists in  {csv_file}...' \\n \\\r\n \\n \\\r\n<b>code 2 (line 203):</b>'%s successfully created!' % csv_file \\n \\\r\n<b>refactored code2:</b>f'{csv_file} successfully created!'\"\n      }, {\n        title: 'Refactor the following Python code with With statement, e.g., <code>\"f=open(\"xxx\",\"r\"); pass) can be refactored into with open(\"xxx\",\"r\") as f: pass \"</code>. <p><a href=\"https://github.com/sevagas/macro_pack/blob/071fd4aa16dc74815c2a860ddafe4358d6454c89/src/modules/wsf_gen.py#L27-L48\">Right Click the Link to See Code in A New Tab!</a></p>',\n        references: \"<b>code 1 (line 30):</b>f = open(self.getMainVBAFile() + '.vbs') \\n \\\r\n<b>refactored code1:</b>with open(self.getMainVBAFile() + '.vbs') as f: \\n \\\r\n    vbsContent = f.read() \\n \\\r\n \\n \\\r\n<b>code 2 (line 42):</b>f = open(self.outputFilePath, 'w') \\n \\\r\n<b>refactored code2:</b>with open(self.outputFilePath, 'w') as f: \\n \\\r\n    f.writelines(wsfContent)\"\n      }, {\n        title: 'Refactor the following Python code with set comprehension, e.g., a= {i for i in range(2)}. <p><a href=\"https://github.com/forseti-security/forseti-security/blob/9069bfb04e818e51f484d860a249de0d578d4cf3/google/cloud/forseti/services/dao.py#L2044-L2073\">Right Click the Link to See Code in A New Tab!</a></p>',\n        references: \"<b>code 1 (line 2062):</b>for permission in permissions: \\n \\\r\n    for role in permission.roles: \\n \\\r\n        roles.add(role) \\n \\\r\n<b>refactored code1:</b>roles = {role for permission in permissions for role in permission.roles} \\n \\\r\n \\n \\\r\n<b>code 2 (line 2067):</b>for role in roles: \\n \\\r\n    role_permissions = set([p.name for p in role.permissions]) \\n \\\r\n    if permission_set.issubset(role_permissions): \\n \\\r\n        result_set.add(role) \\n \\\r\n<b>refactored code2:</b>result_set = {role for role in roles if permission_set.issubset(set([p.name for p in role.permissions]))}\"\n      }, {\n        title: 'Refactor the following Python code with dict comprehension, e.g., a= {i:i for i in range(2)}. <p><a href=\"https://github.com/huggingface/transformers/blob/1d7773594754457ed4a79cf6d98bcaabea5bff51/tests/test_modeling_common.py#L2613-L2644\">Right Click the Link to See Code in A New Tab!</a></p>',\n        references: \"<b>code 1 (line 2624):</b>for (k, v) in dictionary.items(): \\n \\\r\n    if isinstance(v, torch.Tensor): \\n \\\r\n        output[k] = v.to(device) \\n \\\r\n    else: \\n \\\r\n        output[k] = v \\n \\\r\n<b>refactored code1:</b>output = {k: v.to(device) if isinstance(v, torch.Tensor) else v for (k, v) in dictionary.items()}\"\n      }, {\n        title: 'Refactor the following Python code with truth test, e.g., <code>a != [] can be refactored into a</code>. <p><a href=\"https://github.com/geek-ai/MAgent/blob/2144dbd4bef49a8bda499dee95956c3fa04d6a43/examples/train_single.py#L115-L210\">Right Click the Link to See Code in A New Tab!</a></p>',\n        references: \"<b>code 1 (line 200):</b>(k+1) % args.render_every == 0 \\n \\\r\n<b>refactored code1:</b>not (k+1) % args.render_every \\n \\\r\n \\n \\\r\n<b>code 2:  (line 207)</b>(k + 1) % args.save_every == 0 \\n \\\r\n<b>refactored code2:not (k + 1) % args.save_every\"\n      }, {\n        title: 'Refactor the following Python code with Assignment with multiple targets, e.g., <code>\"a = 1; b = c can be refactored into a, b = 1, c pass\"</code>. <p><a href=\"https://github.com/facebookresearch/ReAgent/blob/57b58a8b3a6b74bb87a197b73a6cd108ddad895e/reagent/gym/envs/pomdp/pocman.py#L365-L379\">Right Click the Link to See Code in A New Tab!</a></p>',\n        references: \"<b>code 1 (line 366):</b>smell_range = self.board['_smell_range'] \\n \\\r\nagent_pos = self.internal_state.agent_pos \\n \\\r\n<b>refactored code1:</b>smell_range , agent_pos  = self.board['_smell_range'], self.internal_state.agent_pos \\n \\\r\n \\n \\\r\n<b>code 2 (line 371):</b>smell_x = agent_pos.x + x \\n \\\r\nsmell_y = agent_pos.y + y \\n \\\r\n<b>refactored code2:</b>smell_x , smell_y  = agent_pos.x + x, agent_pos.y + y\"\n      }, {\n        title: 'Refactor the following Python code with dict comprehension, e.g., a= {i:i for i in range(2)}. <p><a href=\"https://github.com/DATA-DOG/taiga-back/blob/9d54dc63b52b1c5222a904c01ce272169dd26759/taiga/projects/history/models.py#L99-L242\">Right Click the Link to See Code in A New Tab!</a></p>',\n        references: \"<b>code 1 (line 151):</b>for (role_id, point_id) in pointsnew.items(): \\n \\\r\n    role_name = resolve_value('roles', role_id) \\n \\\r\n    points[role_name] = [None, resolve_value('points', point_id)] \\n \\\r\n<b>refactored code1:</b>points = {resolve_value('roles', role_id): [None, resolve_value('points', point_id)] for (role_id, point_id) in pointsnew.items()} \\n \\\r\n \\n \\\r\n<b>code 2 (line 156):</b>for (role_id, point_id) in pointsnew.items(): \\n \\\r\n    role_name = resolve_value('roles', role_id) \\n \\\r\n    oldpoint_id = pointsold.get(role_id, None) \\n \\\r\n    points[role_name] = [resolve_value('points', oldpoint_id), resolve_value('points', point_id)] \\n \\\r\n<b>refactored code2:</b>points.update({resolve_value('roles', role_id): [resolve_value('points', pointsold.get(role_id, None)), resolve_value('points', point_id)] for (role_id, point_id) in pointsnew.items()})\"\n      }, {\n        title: 'Refactor the following Python code with With statement, e.g., <code>\"f=open(\"xxx\",\"r\"); pass) can be refactored into with open(\"xxx\",\"r\") as f: pass \"</code>. <p><a href=\"https://github.com/golemhq/golem/blob/84f51478b169cdeab73fc7e2a22a64d0a2a29263/golem/report/execution_report.py#L186-L227\">Right Click the Link to See Code in A New Tab!</a></p>',\n        references: \"<b>code 1 (line 225):</b>b64 = base64.b64encode(open(image_filename, 'rb').read()).decode('utf-8') \\n \\\r\nstep['screenshot'] = b64 \\n \\\r\n<b>refactored code1:</b>with open(image_filename, 'rb') as f: \\n \\\r\n    b64 = base64.b64encode(f.read()).decode('utf-8') \\n \\\r\n    step['screenshot'] = b64\"\n      }, {\n        title: 'Refactor the following Python code with fstring to format a string, e.g., <code>a=world; \"hello: %s\" % a be refactored into f\"hello:{a}\"</code>. <p><a href=\"https://github.com/marin-m/pbtk/blob/777254e0fe38819fddee58ab6cb554c219f74908/utils/descpb_to_proto.py#L134-L183\">Right Click the Link to See Code in A New Tab!</a></p>',\n        references: \"<b>code 1 (line 140):</b>'default = %s' % fmt_value(field.default_value) \\n \\\r\n<b>refactored code1:</b>f'default = {fmt_value(field.default_value)}' \\n \\\r\n \\n \\\r\n<b>code 2 (line 142):</b>'default = \\\"%s\\\"' % field.default_value \\n \\\r\n<b>refactored code2:</b>f'default = \\\"{field.default_value}\\\"' \\n \\\r\n \\n \\\r\n<b>code 3 (line 153):</b>'default = %s' % field.default_value \\n \\\r\n<b>refactored code3:</b>f'default = {field.default_value}' \\n \\\r\n \\n \\\r\n<b>code 4 (line 165):</b>' %s = %s;\\n' % (field.name, fmt_value(field.number, field.options, optarr=default)) \\n \\\r\n<b>refactored code4:</b>f'{field.name} = {fmt_value(field.number, field.options, optarr=default)};\\n' \\n \\\r\n \\n \\\r\n<b>code 5 (line 168):</b>'%s %s %s = %s;\\n' % (labels[field.label], type_, field.name, fmt_value(field.number, field.options, optarr=default)) \\n \\\r\n<b>refactored code5:</b>f'{labels[field.label]} {type_} {field.name} = {fmt_value(field.number, field.options, optarr=default)};\\n' \\n \\\r\n \\n \\\r\n<b>code 6 (line 170):</b>'%s group %s = %d ' % (labels[field.label], type_, field.number) \\n \\\r\n<b>refactored code6:</b>f'{labels[field.label]} group {type_} = {field.number} ' \\n \\\r\n \\n \\\r\n<b>code 7 (line 179):</b>'_oneof_%d' % field.oneof_index \\n \\\r\n<b>refactored code7:</b>f'_oneof_{field.oneof_index}' \\n \\\r\n \\n \\\r\n<b>code 8 (line 180):</b>'_oneof_%d' % field.oneof_index \\n \\\r\n<b>refactored code8:</b>f'_oneof_{field.oneof_index}'\"\n      }]\n    };\n  },\n  created: function created() {\n    this.createAnswer(this.tupleIndex);\n  },\n  computed: {\n    question: function question() {\n      return this.questions[this.questionIndex];\n    }\n  },\n  methods: {\n    startTimer: function startTimer() {\n      var _this = this;\n      setInterval(function () {\n        if (_this.seconds > 0) {\n          _this.seconds--;\n        } else if (_this.minutes > 0) {\n          _this.minutes--;\n          _this.seconds = 59;\n        } else {\n          // Time is up\n          _this.ableEdit = false;\n        }\n      }, 1000);\n    },\n    addQuestion: function addQuestion() {\n      // Code to add a new question\n      this.tupleIndex += 1;\n      this.createAnswer(this.tupleIndex);\n    },\n    createAnswer: function createAnswer(index) {\n      var answer = {\n        'tuple_id': index\n      };\n      this.answers.push(answer);\n    },\n    resetParameters: function resetParameters() {\n      this.minutes = 5;\n      this.seconds = 0;\n      this.tupleIndex = 1;\n      this.ableEdit = true;\n      this.answers = [];\n      this.$refs['reportTuples_1'][0].resetParameters();\n      this.createAnswer(this.tupleIndex);\n    },\n    nextQuestion: function nextQuestion() {\n      console.log(this.$refs);\n      for (var i = 0; i < this.tupleIndex; i++) {\n        this.answers[i]['selectedOption'] = this.$refs['reportTuples_' + (i + 1)][0].selectedOption;\n        this.answers[i]['reason'] = this.$refs['reportTuples_' + (i + 1)][0].reason;\n        this.answers[i]['references'] = this.$refs['reportTuples_' + (i + 1)][0].references;\n      }\n      console.log(this.answers);\n      this.finalStoredData['answers_' + (this.questionIndex + 1)] = {\n        'answers': this.answers,\n        'min': 4 - this.minutes,\n        'sec': 60 - this.seconds\n      };\n      if (this.questionIndex < 23) {\n        this.questionIndex += 1;\n        this.resetParameters();\n      } else {\n        this.saveAsJSON();\n        this.$router.push('/thanks');\n      }\n    },\n    saveAsJSON: function saveAsJSON() {\n      var data = JSON.stringify(this.finalStoredData, null, 2);\n      var filename = this.$route.params.name + '.json';\n      var blob = new Blob([data], {\n        type: 'text/plain;charset=utf-8'\n      });\n      saveAs(blob, filename);\n    }\n  },\n  mounted: function mounted() {\n    this.startTimer();\n  }\n};","map":{"version":3,"names":["ReportTuple","saveAs","name","components","data","questionIndex","minutes","seconds","tupleIndex","ableEdit","answers","finalStoredData","questions","title","references","created","createAnswer","computed","question","methods","startTimer","_this","setInterval","addQuestion","index","answer","push","resetParameters","$refs","nextQuestion","console","log","i","selectedOption","reason","saveAsJSON","$router","JSON","stringify","filename","$route","params","blob","Blob","type","mounted"],"sources":["src/components/Report.vue"],"sourcesContent":["<template>\r\n  <div class=\"container1\">\r\n    <div class=\"question-header\">\r\n      <h2>{{ `Question ${questionIndex + 1}:` }}</h2>\r\n      <div class=\"timer\">{{ `Time: ${minutes}:${seconds}` }}</div>\r\n    </div>\r\n    <div class=\"container2\">\r\n      <p class=\"question-title\" v-html=\"question.title\"></p>\r\n      <p class=\"question-note\">Note: Find all code pairs consisting of non-idiomatic code and idiomatic code. <b style=\"color: red; font-size: 1rem;\" >The 'References' section provides the corresponding refactored code for the non-idiomatic code for your reference.</b> <b style=\"font-size: 1rem;\">Place the non-idiomatic code in the 'Original Code' section and the corresponding idiomatic code in the 'Refactored Code' section. There is one or more code pairs. Click the '+' button to add another code pair.</b> If, within 5 minutes, you believe that there is no code to refactor or you cannot identify code that can be refactored, can skip it.</p>\r\n      <p>References:</p>\r\n      <pre>\r\n  <code class=\"question-references\" v-html=\"question.references\" style=\"display:block; white-space:pre-wrap\">\r\n  </code></pre>\r\n\r\n      <div v-for=\"index in tupleIndex\" >\r\n        <ReportTuple :question=\"question\" :able-edit=\"ableEdit\" :key=\"index\" :name=\"index\" :ref=\"'reportTuples_'+index\"/>\r\n        <hr>\r\n      </div>\r\n      <button @click=\"addQuestion\" :disabled=\"!ableEdit\">+</button>\r\n    </div>\r\n    <div class=\"container3\">\r\n      <button @click=\"nextQuestion\" class=\"next-button\">Next</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ReportTuple from './ReportTuple.vue'\r\nimport { saveAs } from 'file-saver';\r\n\r\nexport default {\r\n  name: \"Report\",\r\n  components: {\r\n    ReportTuple\r\n  },\r\n  data() {\r\n    return {\r\n      questionIndex: 0,\r\n      minutes: 5,\r\n      seconds: 0,\r\n      tupleIndex: 1,\r\n      ableEdit: true,\r\n      answers: [],\r\n      finalStoredData:{},\r\n      questions: [\r\n      {\r\ntitle: 'Refactor the following Python code with list comprehension, e.g., a= [1 for i in range(2)]. <p><a href=\"https://github.com/yenchenlin/DeepLearningFlappyBird/blob/5a08d405b68facb784c7dc06ae0f6ad341c2a5a3/deep_q_network.py#L78-L204\">Right Click the Link to See Code in A New Tab!</a></p>',\r\nreferences: \"<b>code (line 163):</b>for i in range(0, len(minibatch)): \\n \\\r\n    terminal = minibatch[i][4] \\n \\\r\n    if terminal: \\n \\\r\n        y_batch.append(r_batch[i]) \\n \\\r\n    else: \\n \\\r\n        y_batch.append(r_batch[i] + GAMMA * np.max(readout_j1_batch[i])) \\n \\\r\n<b>refactored code:</b>y_batch = [r_batch[i] if minibatch[i][4] else r_batch[i] + GAMMA * np.max(readout_j1_batch[i]) for i in range(0, len(minibatch))]\"\r\n        },\r\n\r\n{\r\ntitle: 'Refactor the following Python code with a For statement with multiple targets, e.g., <code>\"for i in a: print(i[0]) can be refactored into for i_0, *i_remain in a: print(i_0)\"</code>. <p><a href=\"https://github.com/franMarz/TexTools-Blender/blob/d2c324f9f4e986c2cdb00da6f0fd0999bb871203/utilities_uv.py#L137-L207\">Right Click the Link to See Code in A New Tab!</a></p>',\r\nreferences: \"<b>code 1 (line 195):</b>for uv_set in settings.selection_uv_loops: \\n \\\r\n    for loop in bm.faces[uv_set[0]].loops: \\n \\\r\n        if loop.vert.index == uv_set[1]: \\n \\\r\n            loop[uv_layers].select = True \\n \\\r\n            break \\n \\\r\n<b>refactored code1:</b>for (uv_set_0, uv_set_1, *uv_set_len) in settings.selection_uv_loops: \\n \\\r\n    for loop in bm.faces[uv_set_0].loops: \\n \\\r\n        if loop.vert.index == uv_set_1: \\n \\\r\n            loop[uv_layers].select = True \\n \\\r\n            break\"\r\n        },\r\n{\r\ntitle: 'Refactor the following Python code with chain comparison, e.g., <code>2 > a > 1</code>. <p><a href=\"https://github.com/JiaxuanYou/graph-generation/blob/3444b8ad2fd7ecb6ade45086b4c75f8e2e9f29d1/create_graphs.py#L7-L153\">Right Click the Link to See Code in A New Tab!</a></p>',\r\nreferences: \"<b>code 1 (line 137):</b>G_ego.number_of_nodes() >= 50 and G_ego.number_of_nodes() <= 400 \\n \\\r\n<b>refactored code1:</b>50 <= G_ego.number_of_nodes() <= 400 \\n \\\r\n \\n \\\r\n<b>code 2:  (line 147)</b>G_ego.number_of_nodes() >= 4 and G_ego.number_of_nodes() <= 20 \\n \\\r\n<b>refactored code2:4 <= G_ego.number_of_nodes() <= 20\"\r\n        },\r\n{\r\ntitle: 'Refactor the following Python code with While/For statement with else clause, e.g., <code>\"for i in a:\\n \\ pass \\n \\ else: \\n \\ pass\"</code>. <p><a href=\"https://github.com/forseti-security/forseti-security/blob/9069bfb04e818e51f484d860a249de0d578d4cf3/google/cloud/forseti/services/dao.py#L841-L872\">Right Click the Link to See Code in A New Tab!</a></p>',\r\nreferences: \"<b>code 1 (line 861):</b>is_root = True \\n \\\r\nfor children in resource_hierarchy.values(): \\n \\\r\n    if parent in children: \\n \\\r\n        is_root = False \\n \\\r\n        break \\n \\\r\nif is_root: \\n \\\r\n    root = parent \\n \\\r\n<b>refactored code1:</b>for children in resource_hierarchy.values(): \\n \\\r\n    if parent in children: \\n \\\r\n        break \\n \\\r\nelse: \\n \\\r\n    root = parent\"\r\n        },\r\n{\r\ntitle: 'Refactor the following Python code with set comprehension, e.g., a= {i for i in range(2)}. <p><a href=\"https://github.com/mozilla/pontoon/blob/3a95b7bb3c3982cad3320898ee9b791dfa1267ed/pontoon/insights/tasks.py#L386-L429\">Right Click the Link to See Code in A New Tab!</a></p>',\r\nreferences: \"<b>code (line 400):</b>for user in privileged_users: \\n \\\r\n    manager = user['managers_group__user'] \\n \\\r\n    last_login = user['managers_group__user__last_login'] \\n \\\r\n    if last_login: \\n \\\r\n        if last_login + relativedelta(months=months) > start_of_today: \\n \\\r\n            active_managers.add(manager) \\n \\\r\n<b>refactored code:</b>active_managers = {user['managers_group__user'] for user in privileged_users if user['managers_group__user__last_login'] if user['managers_group__user__last_login'] + relativedelta(months=months) > start_of_today}\"\r\n        },\r\n{\r\ntitle: 'Refactor the following Python code with chain comparison, e.g., <code>2 > a > 1</code>. <p><a href=\"https://github.com/wbond/package_control/blob/ec6555920e41d195a1721c7a0bcb6fa68e4098aa/package_control/deps/oscrypto/trust_list.py#L65-L138\">Right Click the Link to See Code in A New Tab!</a></p>',\r\nreferences: \"<b>code 1 (line 110):</b>trust_oids != empty_set and any_purpose not in trust_oids and (win_server_auth not in trust_oids) \\n \\\r\n<b>refactored code1:</b>any_purpose not in trust_oids != empty_set and win_server_auth not in trust_oids \\n \\\r\n \\n \\\r\n<b>code 2:  (line 121)</b>trust_oids != empty_set and any_purpose not in trust_oids and (apple_ssl not in trust_oids) \\n \\\r\n<b>refactored code2:any_purpose not in trust_oids != empty_set and apple_ssl not in trust_oids\"\r\n        },\r\n{\r\ntitle: 'Refactor the following Python code with an Assignment statement using a value to assign multiple targets, e.g., <code>\"a=1; b=1 can be refactored into a=b=1\"</code>. <p><a href=\"https://github.com/IntelLabs/coach/blob/2c60cb5acd8cd3c9c381a5066c208e69fc273c7b/rl_coach/dashboard_components/signals_file_base.py#L26-L39\">Right Click the Link to See Code in A New Tab!</a></p>',\r\nreferences: \"<b>code 1 (line 28):</b>self.full_csv_path = '' \\n \\\r\nself.dir = '' \\n \\\r\nself.filename = '' \\n \\\r\n<b>refactored code1:</b>self.full_csv_path, self.dir, self.filename = '' \\n \\\r\n \\n \\\r\n<b>code 2 (line 33):</b>self.csv = None \\n \\\r\nself.bokeh_source = None \\n \\\r\nself.bokeh_source_orig = None \\n \\\r\nself.last_modified = None \\n \\\r\n<b>refactored code2:</b>self.csv, self.bokeh_source, self.bokeh_source_orig, self.last_modified = None \\n \\\r\n \\n \\\r\n<b>code 3 (line 38):</b>self.separate_files = False \\n \\\r\nself.last_reload_data_fix = False \\n \\\r\n<b>refactored code3:</b>self.separate_files, self.last_reload_data_fix = False\"\r\n        },\r\n{\r\ntitle: 'Refactor the following Python code with a For statement with multiple targets, e.g., <code>\"for i in a: print(i[0]) can be refactored into for i_0, *i_remain in a: print(i_0)\"</code>. <p><a href=\"https://github.com/chrismaddalena/ODIN/blob/03fb0044fe658df4d67ffbb8223060958537f17e/lib/htmlreporter.py#L551-L612\">Right Click the Link to See Code in A New Tab!</a></p>',\r\nreferences: \"<b>code 1 (line 578):</b>for row in frontable: \\n \\\r\n    content += '<tr><td>{}</td><td>{}</td><td>{}</td></tr>'.format(row[0], row[1], row[2]) \\n \\\r\n<b>refactored code1:</b>for (row_0, row_1, row_2, *row_len) in subdomains: \\n \\\r\n    content += '<tr><td>{}</td><td>{}</td><td>{}</td></tr>'.format(row_0, row_1, row_2) \\n \\\r\n \\n \\\r\n<b>code 2 (line 592):</b>for row in takeovers: \\n \\\r\n    content += '<tr><td>{}</td><td>{}</td><td>{}</td></tr>'.format(row[0], row[1], row[2]) \\n \\\r\n<b>refactored code2:</b>for (row_0, row_1, row_2, *row_len) in takeovers: \\n \\\r\n    content += '<tr><td>{}</td><td>{}</td><td>{}</td></tr>'.format(row_0, row_1, row_2) \\n \\\r\n \\n \\\r\n<b>code 3 (line 605):</b>for row in subdomains: \\n \\\r\n    content += '<tr><td>{}</td><td>{}</td><td>{}</td></tr>'.format(row[0], row[1], row[2]) \\n \\\r\n<b>refactored code3:</b>for (row_0, row_1, row_2, *row_len) in subdomains: \\n \\\r\n    content += '<tr><td>{}</td><td>{}</td><td>{}</td></tr>'.format(row_0, row_1, row_2)\"\r\n        },\r\n{\r\ntitle: 'Refactor the following Python code with While/For statement with else clause, e.g., <code>\"for i in a:\\n \\ pass \\n \\ else: \\n \\ pass\"</code>. <p><a href=\"https://github.com/DLLXW/data-science-competition/blob/03490a7ea8e6297211fe8709b61ddad251ae51dd/else/%E5%A4%A9%E9%A9%AC%E6%9D%AF--AI%2Bz%E6%99%BA%E8%83%BD%E8%B4%A8%E6%A3%80/code/uer/utils/tokenizer.py#L350-L397\">Right Click the Link to See Code in A New Tab!</a></p>',\r\nreferences: \"<b>code 1 (line 376):</b>is_bad = False \\n \\\r\nwhile start < len(chars): \\n \\\r\n    end = len(chars) \\n \\\r\n    cur_substr = None \\n \\\r\n    while start < end: \\n \\\r\n        substr = ''.join(chars[start:end]) \\n \\\r\n        if start > 0: \\n \\\r\n            substr = '##' + six.ensure_str(substr) \\n \\\r\n        if substr in self.vocab: \\n \\\r\n            cur_substr = substr \\n \\\r\n            break \\n \\\r\n        end -= 1 \\n \\\r\n    if cur_substr is None: \\n \\\r\n        is_bad = True \\n \\\r\n        break \\n \\\r\n    sub_tokens.append(cur_substr) \\n \\\r\n    start = end \\n \\\r\nif is_bad: \\n \\\r\n    output_tokens.append(self.unk_token) \\n \\\r\nelse: \\n \\\r\n    output_tokens.extend(sub_tokens) \\n \\\r\n<b>refactored code1:</b>cur_substr = None \\n \\\r\nwhile start < len(chars): \\n \\\r\n    end = len(chars) \\n \\\r\n    cur_substr = None \\n \\\r\n    while start < end: \\n \\\r\n        substr = ''.join(chars[start:end]) \\n \\\r\n        if start > 0: \\n \\\r\n            substr = '##' + six.ensure_str(substr) \\n \\\r\n        if substr in self.vocab: \\n \\\r\n            cur_substr = substr \\n \\\r\n            break \\n \\\r\n        end -= 1 \\n \\\r\n    if cur_substr is None: \\n \\\r\n        output_tokens.append(self.unk_token) \\n \\\r\n        break \\n \\\r\n    sub_tokens.append(cur_substr) \\n \\\r\n    start = end \\n \\\r\nelse: \\n \\\r\n    output_tokens.extend(sub_tokens) \\n \\\r\n \\n \\\r\n<b>code 2 (line 379): </b>cur_substr = None \\n \\\r\nwhile start < end: \\n \\\r\n    substr = ''.join(chars[start:end]) \\n \\\r\n    if start > 0: \\n \\\r\n        substr = '##' + six.ensure_str(substr) \\n \\\r\n    if substr in self.vocab: \\n \\\r\n        cur_substr = substr \\n \\\r\n        break \\n \\\r\n    end -= 1 \\n \\\r\nif cur_substr is None: \\n \\\r\n    is_bad = True \\n \\\r\n    break \\n \\\r\n<b>refactored code2:</b>while start < end: \\n \\\r\n    substr = ''.join(chars[start:end]) \\n \\\r\n    if start > 0: \\n \\\r\n        substr = '##' + six.ensure_str(substr) \\n \\\r\n    if substr in self.vocab: \\n \\\r\n        cur_substr = substr \\n \\\r\n        break \\n \\\r\n    end -= 1 \\n \\\r\nelse: \\n \\\r\n    is_bad = True \\n \\\r\n    break\"\r\n        },\r\n{\r\ntitle: 'Refactor the following Python code with Starred in Function Calls, e.g., <code>\"func(a[0],a[1]) can be refactored into func(*a[:2])\"</code>. <p><a href=\"https://github.com/neuralchen/SimSwap/blob/a5f6dea67398eec9ee71e156f7ad15dbd7ce4977/test_video_swap_multispecific.py#L33-L98\">Right Click the Link to See Code in A New Tab!</a></p>',\r\nreferences: \"<b>code 1 (line 65):</b>specific_person.shape[0], specific_person.shape[1], specific_person.shape[2] \\n \\\r\n<b>refactored code1:</b>*specific_person.shape[:3] \\n \\\r\n \\n \\\r\n<b>code 2 (line 84):</b>img_a.shape[0], img_a.shape[1], img_a.shape[2] \\n \\\r\n<b>refactored code2:</b>*img_a.shape[:3]\"\r\n        },\r\n{\r\n          title: 'Refactor the following Python code with list comprehension, e.g., a= [1 for i in range(2)]. <p><a href=\"https://github.com/microsoft/nni/blob/767ed7f22e1e588ce76cbbecb6c6a4a76a309805/nni/algorithms/hpo/networkmorphism_tuner/graph.py#L866-L908\">Right Click the Link to See Code in A New Tab!</a></p>',\r\n          references: \"<b>code 1 (line 877):</b>type_pairs = [] \\n \\\r\nfor item in graph.operation_history: \\n \\\r\n    if item[0] == 'to_deeper_model': \\n \\\r\n        operation_history.append([item[0], item[1], layer_description_extractor(item[2], graph.node_to_id)]) \\n \\\r\n    else: \\n \\\r\n        operation_history.append(item) \\n \\\r\n\\n \\\r\n<b>refactored code 1:</b>operation_history = [[item[0], item[1], layer_description_extractor(item[2], graph.node_to_id)] if item[0] == 'to_deeper_model' else item for item in graph.operation_history] \\n \\\r\n\\n \\\r\n<b>code 2 (line 894):</b>for node in graph.node_list: \\n \\\r\n    node_id = graph.node_to_id[node] \\n \\\r\n    node_information = node.shape \\n \\\r\n    node_list.append((node_id, node_information)) \\n \\\r\n<b>refactored code 2:</b>node_list = [(graph.node_to_id[node], node.shape) for node in graph.node_list] \\n \\\r\n\\n \\\r\n<b>code 3 (line 899):</b>for (layer_id, item) in enumerate(graph.layer_list): \\n \\\r\n    layer = graph.layer_list[layer_id] \\n \\\r\n    layer_information = layer_description_extractor(layer, graph.node_to_id) \\n \\\r\n    layer_list.append((layer_id, layer_information)) \\n \\\r\n<b>refactored code 3:</b>layer_list = [(layer_id, layer_description_extractor(graph.layer_list[layer_id], graph.node_to_id)) for (layer_id, item) in enumerate(graph.layer_list)]\"\r\n        },\r\n{\r\ntitle: 'Refactor the following Python code with an Assignment statement using a value to assign multiple targets, e.g., <code>\"a=1; b=1 can be refactored into a=b=1\"</code>. <p><a href=\"https://github.com/ansible/ansible-modules-extras/blob/f216ba8e0616bc8ad8794c22d4b48e1ab18886cf/cloud/rackspace/rax_mon_check.py#L144-L262\">Right Click the Link to See Code in A New Tab!</a></p>',\r\nreferences: \"<b>code 1 (line 183):</b>should_delete = False \\n \\\r\nshould_create = False \\n \\\r\nshould_update = False \\n \\\r\n<b>refactored code1:</b>should_delete, should_create, should_update = False\"\r\n        },\r\n\r\n{\r\ntitle: 'Refactor the following Python code with truth test, e.g., <code>a != [] can be refactored into a</code>. <p><a href=\"https://github.com/django/django/blob/c709a748ce6e0759e415a0e3544e0f4ad3d30f8b/django/http/multipartparser.py#L132-L364\">Right Click the Link to See Code in A New Tab!</a></p>',\r\nreferences: \"<b>code 1 (line 146):</b>self._content_length == 0 \\n \\\r\n<b>refactored code1:</b>not self._content_length \\n \\\r\n \\n \\\r\n<b>code 2 (line 309):</b>remaining != 0 \\n \\\r\n<b>refactored code2:remaining\"\r\n        },\r\n\r\n{\r\ntitle: 'Refactor the following Python code with Assignment with multiple targets, e.g., <code>\"a = 1; b = c can be refactored into a, b = 1, c pass\"</code>. <p><a href=\"https://github.com/diffgram/diffgram/blob/5bf45ff076ecc9b3192eedae94d2f515cca30edf/default/tests/methods/event/test_user_visit_history.py#L18-L36\">Right Click the Link to See Code in A New Tab!</a></p>',\r\nreferences: \"<b>code 1 (line 33):</b>self.project = project_data['project'] \\n \\\r\nself.project_data = project_data \\n \\\r\n<b>refactored code1:</b>self.project , self.project_data  = project_data['project'], project_data\"\r\n        },\r\n\r\n{\r\ntitle: 'Refactor the following Python code with Starred in Function Calls, e.g., <code>\"func(a[0],a[1]) can be refactored into func(*a[:2])\"</code>. <p><a href=\"https://github.com/open-mmlab/OpenPCDet/blob/255db8f02a8bd07211d2c91f54602d63c4c93356/pcdet/ops/pointnet2/pointnet2_batch/pointnet2_modules.py#L61-L99\">Right Click the Link to See Code in A New Tab!</a></p>',\r\nreferences: \"<b>code 1 (line 93):</b>mlp_spec[k], mlp_spec[k + 1] \\n \\\r\n<b>refactored code1:</b>*mlp_spec[k:k+2]\"\r\n        },\r\n\r\n{\r\ntitle: 'Refactor the following Python code with fstring to format a string, e.g., <code>a=world; \"hello: %s\" % a be refactored into f\"hello:{a}\"</code>. <p><a href=\"https://github.com/speechbrain/speechbrain/blob/d71a7e018738329fe9a7951d2e9457d52f94edad/recipes/KsponSpeech/ksponspeech_prepare.py#L136-L204\">Right Click the Link to See Code in A New Tab!</a></p>',\r\nreferences: \"<b>code 1 (line 163):</b>'Creating csv lists in  %s...' % csv_file \\n \\\r\n<b>refactored code1:</b>f'Creating csv lists in  {csv_file}...' \\n \\\r\n \\n \\\r\n<b>code 2 (line 203):</b>'%s successfully created!' % csv_file \\n \\\r\n<b>refactored code2:</b>f'{csv_file} successfully created!'\"\r\n        },\r\n\r\n{\r\ntitle: 'Refactor the following Python code with With statement, e.g., <code>\"f=open(\"xxx\",\"r\"); pass) can be refactored into with open(\"xxx\",\"r\") as f: pass \"</code>. <p><a href=\"https://github.com/sevagas/macro_pack/blob/071fd4aa16dc74815c2a860ddafe4358d6454c89/src/modules/wsf_gen.py#L27-L48\">Right Click the Link to See Code in A New Tab!</a></p>',\r\nreferences: \"<b>code 1 (line 30):</b>f = open(self.getMainVBAFile() + '.vbs') \\n \\\r\n<b>refactored code1:</b>with open(self.getMainVBAFile() + '.vbs') as f: \\n \\\r\n    vbsContent = f.read() \\n \\\r\n \\n \\\r\n<b>code 2 (line 42):</b>f = open(self.outputFilePath, 'w') \\n \\\r\n<b>refactored code2:</b>with open(self.outputFilePath, 'w') as f: \\n \\\r\n    f.writelines(wsfContent)\"\r\n        },\r\n\r\n{\r\ntitle: 'Refactor the following Python code with set comprehension, e.g., a= {i for i in range(2)}. <p><a href=\"https://github.com/forseti-security/forseti-security/blob/9069bfb04e818e51f484d860a249de0d578d4cf3/google/cloud/forseti/services/dao.py#L2044-L2073\">Right Click the Link to See Code in A New Tab!</a></p>',\r\nreferences: \"<b>code 1 (line 2062):</b>for permission in permissions: \\n \\\r\n    for role in permission.roles: \\n \\\r\n        roles.add(role) \\n \\\r\n<b>refactored code1:</b>roles = {role for permission in permissions for role in permission.roles} \\n \\\r\n \\n \\\r\n<b>code 2 (line 2067):</b>for role in roles: \\n \\\r\n    role_permissions = set([p.name for p in role.permissions]) \\n \\\r\n    if permission_set.issubset(role_permissions): \\n \\\r\n        result_set.add(role) \\n \\\r\n<b>refactored code2:</b>result_set = {role for role in roles if permission_set.issubset(set([p.name for p in role.permissions]))}\"\r\n        },\r\n\r\n{\r\ntitle: 'Refactor the following Python code with dict comprehension, e.g., a= {i:i for i in range(2)}. <p><a href=\"https://github.com/huggingface/transformers/blob/1d7773594754457ed4a79cf6d98bcaabea5bff51/tests/test_modeling_common.py#L2613-L2644\">Right Click the Link to See Code in A New Tab!</a></p>',\r\nreferences: \"<b>code 1 (line 2624):</b>for (k, v) in dictionary.items(): \\n \\\r\n    if isinstance(v, torch.Tensor): \\n \\\r\n        output[k] = v.to(device) \\n \\\r\n    else: \\n \\\r\n        output[k] = v \\n \\\r\n<b>refactored code1:</b>output = {k: v.to(device) if isinstance(v, torch.Tensor) else v for (k, v) in dictionary.items()}\"\r\n        },\r\n\r\n{\r\ntitle: 'Refactor the following Python code with truth test, e.g., <code>a != [] can be refactored into a</code>. <p><a href=\"https://github.com/geek-ai/MAgent/blob/2144dbd4bef49a8bda499dee95956c3fa04d6a43/examples/train_single.py#L115-L210\">Right Click the Link to See Code in A New Tab!</a></p>',\r\nreferences: \"<b>code 1 (line 200):</b>(k+1) % args.render_every == 0 \\n \\\r\n<b>refactored code1:</b>not (k+1) % args.render_every \\n \\\r\n \\n \\\r\n<b>code 2:  (line 207)</b>(k + 1) % args.save_every == 0 \\n \\\r\n<b>refactored code2:not (k + 1) % args.save_every\"\r\n        },\r\n\r\n{\r\ntitle: 'Refactor the following Python code with Assignment with multiple targets, e.g., <code>\"a = 1; b = c can be refactored into a, b = 1, c pass\"</code>. <p><a href=\"https://github.com/facebookresearch/ReAgent/blob/57b58a8b3a6b74bb87a197b73a6cd108ddad895e/reagent/gym/envs/pomdp/pocman.py#L365-L379\">Right Click the Link to See Code in A New Tab!</a></p>',\r\nreferences: \"<b>code 1 (line 366):</b>smell_range = self.board['_smell_range'] \\n \\\r\nagent_pos = self.internal_state.agent_pos \\n \\\r\n<b>refactored code1:</b>smell_range , agent_pos  = self.board['_smell_range'], self.internal_state.agent_pos \\n \\\r\n \\n \\\r\n<b>code 2 (line 371):</b>smell_x = agent_pos.x + x \\n \\\r\nsmell_y = agent_pos.y + y \\n \\\r\n<b>refactored code2:</b>smell_x , smell_y  = agent_pos.x + x, agent_pos.y + y\"\r\n        },\r\n\r\n{\r\ntitle: 'Refactor the following Python code with dict comprehension, e.g., a= {i:i for i in range(2)}. <p><a href=\"https://github.com/DATA-DOG/taiga-back/blob/9d54dc63b52b1c5222a904c01ce272169dd26759/taiga/projects/history/models.py#L99-L242\">Right Click the Link to See Code in A New Tab!</a></p>',\r\nreferences: \"<b>code 1 (line 151):</b>for (role_id, point_id) in pointsnew.items(): \\n \\\r\n    role_name = resolve_value('roles', role_id) \\n \\\r\n    points[role_name] = [None, resolve_value('points', point_id)] \\n \\\r\n<b>refactored code1:</b>points = {resolve_value('roles', role_id): [None, resolve_value('points', point_id)] for (role_id, point_id) in pointsnew.items()} \\n \\\r\n \\n \\\r\n<b>code 2 (line 156):</b>for (role_id, point_id) in pointsnew.items(): \\n \\\r\n    role_name = resolve_value('roles', role_id) \\n \\\r\n    oldpoint_id = pointsold.get(role_id, None) \\n \\\r\n    points[role_name] = [resolve_value('points', oldpoint_id), resolve_value('points', point_id)] \\n \\\r\n<b>refactored code2:</b>points.update({resolve_value('roles', role_id): [resolve_value('points', pointsold.get(role_id, None)), resolve_value('points', point_id)] for (role_id, point_id) in pointsnew.items()})\"\r\n        },\r\n{\r\ntitle: 'Refactor the following Python code with With statement, e.g., <code>\"f=open(\"xxx\",\"r\"); pass) can be refactored into with open(\"xxx\",\"r\") as f: pass \"</code>. <p><a href=\"https://github.com/golemhq/golem/blob/84f51478b169cdeab73fc7e2a22a64d0a2a29263/golem/report/execution_report.py#L186-L227\">Right Click the Link to See Code in A New Tab!</a></p>',\r\nreferences: \"<b>code 1 (line 225):</b>b64 = base64.b64encode(open(image_filename, 'rb').read()).decode('utf-8') \\n \\\r\nstep['screenshot'] = b64 \\n \\\r\n<b>refactored code1:</b>with open(image_filename, 'rb') as f: \\n \\\r\n    b64 = base64.b64encode(f.read()).decode('utf-8') \\n \\\r\n    step['screenshot'] = b64\"\r\n        },\r\n{\r\ntitle: 'Refactor the following Python code with fstring to format a string, e.g., <code>a=world; \"hello: %s\" % a be refactored into f\"hello:{a}\"</code>. <p><a href=\"https://github.com/marin-m/pbtk/blob/777254e0fe38819fddee58ab6cb554c219f74908/utils/descpb_to_proto.py#L134-L183\">Right Click the Link to See Code in A New Tab!</a></p>',\r\nreferences: \"<b>code 1 (line 140):</b>'default = %s' % fmt_value(field.default_value) \\n \\\r\n<b>refactored code1:</b>f'default = {fmt_value(field.default_value)}' \\n \\\r\n \\n \\\r\n<b>code 2 (line 142):</b>'default = \\\"%s\\\"' % field.default_value \\n \\\r\n<b>refactored code2:</b>f'default = \\\"{field.default_value}\\\"' \\n \\\r\n \\n \\\r\n<b>code 3 (line 153):</b>'default = %s' % field.default_value \\n \\\r\n<b>refactored code3:</b>f'default = {field.default_value}' \\n \\\r\n \\n \\\r\n<b>code 4 (line 165):</b>' %s = %s;\\n' % (field.name, fmt_value(field.number, field.options, optarr=default)) \\n \\\r\n<b>refactored code4:</b>f'{field.name} = {fmt_value(field.number, field.options, optarr=default)};\\n' \\n \\\r\n \\n \\\r\n<b>code 5 (line 168):</b>'%s %s %s = %s;\\n' % (labels[field.label], type_, field.name, fmt_value(field.number, field.options, optarr=default)) \\n \\\r\n<b>refactored code5:</b>f'{labels[field.label]} {type_} {field.name} = {fmt_value(field.number, field.options, optarr=default)};\\n' \\n \\\r\n \\n \\\r\n<b>code 6 (line 170):</b>'%s group %s = %d ' % (labels[field.label], type_, field.number) \\n \\\r\n<b>refactored code6:</b>f'{labels[field.label]} group {type_} = {field.number} ' \\n \\\r\n \\n \\\r\n<b>code 7 (line 179):</b>'_oneof_%d' % field.oneof_index \\n \\\r\n<b>refactored code7:</b>f'_oneof_{field.oneof_index}' \\n \\\r\n \\n \\\r\n<b>code 8 (line 180):</b>'_oneof_%d' % field.oneof_index \\n \\\r\n<b>refactored code8:</b>f'_oneof_{field.oneof_index}'\"\r\n        }\r\n\r\n      ],\r\n    }\r\n  },\r\n  created() {\r\n    this.createAnswer(this.tupleIndex);\r\n  },\r\n  computed: {\r\n    question() {\r\n      return this.questions[this.questionIndex]\r\n    },\r\n  },\r\n  methods: {\r\n    startTimer() {\r\n      setInterval(() => {\r\n        if (this.seconds > 0) {\r\n          this.seconds--\r\n        } else if (this.minutes > 0) {\r\n          this.minutes--\r\n          this.seconds = 59\r\n        } else {\r\n          // Time is up\r\n          this.ableEdit = false\r\n        }\r\n      }, 1000)\r\n    },\r\n    addQuestion() {\r\n      // Code to add a new question\r\n      this.tupleIndex += 1;\r\n      this.createAnswer(this.tupleIndex);\r\n    },\r\n    createAnswer(index) {\r\n      var answer = {'tuple_id':index};\r\n      this.answers.push(answer);\r\n    },\r\n    resetParameters() {\r\n      this.minutes = 5;\r\n      this.seconds = 0;\r\n      this.tupleIndex = 1;\r\n      this.ableEdit = true;\r\n      this.answers = [];\r\n      this.$refs['reportTuples_1'][0].resetParameters();\r\n      this.createAnswer(this.tupleIndex);\r\n    },\r\n    nextQuestion(){\r\n      console.log(this.$refs)\r\n      for (var i=0;i<this.tupleIndex;i++) {\r\n        this.answers[i]['selectedOption'] = this.$refs['reportTuples_'+(i+1)][0].selectedOption\r\n        this.answers[i]['reason'] = this.$refs['reportTuples_'+(i+1)][0].reason\r\n        this.answers[i]['references'] = this.$refs['reportTuples_'+(i+1)][0].references\r\n      }\r\n      console.log(this.answers)\r\n      this.finalStoredData['answers_'+(this.questionIndex+1)] = {'answers':this.answers, 'min':4-this.minutes,\r\n        'sec':60-this.seconds}\r\n\r\n      if (this.questionIndex < 23) {\r\n        this.questionIndex += 1;\r\n        this.resetParameters()\r\n      } else {\r\n        this.saveAsJSON();\r\n        this.$router.push('/thanks');\r\n      }\r\n    },\r\n    saveAsJSON() {\r\n      const data = JSON.stringify(this.finalStoredData, null, 2);\r\n      const filename = this.$route.params.name + '.json';\r\n      const blob = new Blob([data], { type: 'text/plain;charset=utf-8' });\r\n      saveAs(blob, filename);\r\n    }\r\n\r\n  },\r\n  mounted() {\r\n    this.startTimer();\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container1 {\r\n  width: 66.67%;\r\n  margin: auto;\r\n}\r\n.container2 {\r\n  width: 90%;\r\n  margin: auto;\r\n  text-align: left;\r\n  font-size: 1.2rem;\r\n}\r\n.question-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n.question-title {\r\n  margin-bottom: 1.5rem;\r\n}\r\n.question-references{\r\nfont-size: 0.8rem;\r\nwidth: 100%;\r\n}\r\n.timer {\r\n  font-size: 1.2rem;\r\n}\r\n.container3 {\r\n  display: flex;\r\n  width: 100%;\r\n  margin-top: 1.5rem;\r\n}\r\n.next-button {\r\n  margin-left: auto;\r\n}\r\n.question-note{\r\nfont-size: 0.8rem;\r\nwidth: 100%;\r\n}\r\n.code {\r\n  display: block;\r\n  white-space: pre-wrap;\r\n  font-size: 0.4rem;\r\n}\r\n</style>"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,OAAAA,WAAA;AACA,SAAAC,MAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAH,WAAA,EAAAA;EACA;EACAI,IAAA,WAAAA,KAAA;IACA;MACAC,aAAA;MACAC,OAAA;MACAC,OAAA;MACAC,UAAA;MACAC,QAAA;MACAC,OAAA;MACAC,eaAAA;IACA;EACA;EACAc,OAAA;IACAC,UAAA,WAAAA,WAAA;MAAA,IAAAC,KAAA;MACAC,WAAA;QACA,IAAAD,KAAA,CAAAd,OAAA;UACAc,KAAA,CAAAd,OAAA;QACA,WAAAc,KAAA,CAAAf,OAAA;UACAe,KAAA,CAAAf,OAAA;UACAe,KAAA,CAAAd,OAAA;QACA;UACA;UACAc,KAAA,CAAAZ,QAAA;QACA;MACA;IACA;IACAc,WAAA,WAAAA,YAAA;MACA;MACA,KAAAf,UAAA;MACA,KAAAQ,YAAA,MAAAR,UAAA;IACA;IACAQ,YAAA,WAAAA,aAAAQ,KAAA;MACA,IAAAC,MAAA;QAAA,YAAAD;MAAA;MACA,KAAAd,OAAA,CAAAgB,IAAA,CAAAD,MAAA;IACA;IACAE,eAAA,WAAAA,gBAAA;MACA,KAAArB,OAAA;MACA,KAAAC,OAAA;MACA,KAAAC,UAAA;MACA,KAAAC,QAAA;MACA,KAAAC,OAAA;MACA,KAAAkB,KAAA,sBAAAD,eAAA;MACA,KAAAX,YAAA,MAAAR,UAAA;IACA;IACAqB,YAAA,WAAAA,aAAA;MACAC,OAAA,CAAAC,GAAA,MAAAH,KAAA;MACA,SAAAI,CAAA,MAAAA,CAAA,QAAAxB,UAAA,EAAAwB,CAAA;QACA,KAAAtB,OAAA,CAAAsB,CAAA,2BAAAJ,KAAA,oBAAAI,CAAA,UAAAC,cAAA;QACA,KAAAvB,OAAA,CAAAsB,CAAA,mBAAAJ,KAAA,oBAAAI,CAAA,UAAAE,MAAA;QACA,KAAAxB,OAAA,CAAAsB,CAAA,uBAAAJ,KAAA,oBAAAI,CAAA,UAAAlB,UAAA;MACA;MACAgB,OAAA,CAAAC,GAAA,MAAArB,OAAA;MACA,KAAAC,eAAA,oBAAAN,aAAA;QAAA,gBAAAK,OAAA;QAAA,gBAAAJ,OAAA;QACA,iBAAAC;MAAA;MAEA,SAAAF,aAAA;QACA,KAAAA,aAAA;QACA,KAAAsB,eAAA;MACA;QACA,KAAAQ,UAAA;QACA,KAAAC,OAAA,CAAAV,IAAA;MACA;IACA;IACAS,UAAA,WAAAA,WAAA;MACA,IAAA/B,IAAA,GAAAiC,IAAA,CAAAC,SAAA,MAAA3B,eAAA;MACA,IAAA4B,QAAA,QAAAC,MAAA,CAAAC,MAAA,CAAAvC,IAAA;MACA,IAAAwC,IAAA,OAAAC,IAAA,EAAAvC,IAAA;QAAAwC,IAAA;MAAA;MACA3C,MAAA,CAAAyC,IAAA,EAAAH,QAAA;IACA;EAEA;EACAM,OAAA,WAAAA,QAAA;IACA,KAAAzB,UAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
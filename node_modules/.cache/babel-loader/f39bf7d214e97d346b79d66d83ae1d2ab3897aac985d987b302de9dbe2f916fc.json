{"ast":null,"code":"import \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.push.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data: function data() {\n    return {\n      title: 'User Study about Code Refactorings using Pythonic Idioms',\n      introduction1: 'Welcome to our user study! In this study, In this study, you\\'ll be presented with Python code, and your task is to identify pairs of code — one with non-idiomatic practices and its counterpart refactored with Pythonic idioms. \\ \\n There are <b>24</b> questions. Each question should be completed within a <b>5-minute</b> time frame, and once the time is up, you will not be able to make any further changes and must move on to the next question.  <b>Feel free to search the internet to assist in answering questions, but refrain from executing or writing code during the process. </b>',\n      introduction3: 'To begin the study, please enter your name and click start. The first question will commence, and the timer will begin counting down.',\n      name: ''\n    };\n  },\n  methods: {\n    startQuestionnaire: function startQuestionnaire() {\n      // Code to start the questionnaire\n      if (this.name.trim() !== '') {\n        this.$router.push({\n          name: 'report',\n          params: {\n            name: this.name\n          }\n        });\n        // this.$router.push({name: 'demo', params: {name: this.name}});\n      }\n    },\n    pracQuestionnaire: function pracQuestionnaire() {\n      if (this.name.trim() !== '') {\n        // this.$router.push({name: 'report', params: {name: this.name}});\n        this.$router.push({\n          name: 'demo',\n          params: {\n            name: this.name\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","title","introduction1","introduction3","name","methods","startQuestionnaire","trim","$router","push","params","pracQuestionnaire"],"sources":["src/components/Welcome.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>{{ title }}</h1>\n    <div class=\"intro\">\n      <p v-html=\"introduction1\"></p>\n      <p v-html=\"introduction2\"></p>\n      <p v-html=\"introduction3\"></p>\n    </div>\n    <form>\n      <div class=\"name_input\">\n        <span>Your name: </span>\n        <label>\n          <input type=\"text\" v-model=\"name\" required>\n        </label>\n      </div>\n      <div>\n        <button @click=\"pracQuestionnaire\" class=\"start\">Practice</button>\n      </div>\n      <button @click=\"startQuestionnaire\" class=\"start\">Start</button>\n    </form>\n\n  </div>\n</template>\n\n<script>\n\nexport default {\n  data() {\n    return {\n      title: 'User Study about Code Refactorings using Pythonic Idioms',\n      introduction1: 'Welcome to our user study! In this study, In this study, you\\'ll be presented with Python code, and your task is to identify pairs of code — one with non-idiomatic practices and its counterpart refactored with Pythonic idioms. \\ \\n There are <b>24</b> questions. Each question should be completed within a <b>5-minute</b> time frame, and once the time is up, you will not be able to make any further changes and must move on to the next question.  <b>Feel free to search the internet to assist in answering questions, but refrain from executing or writing code during the process. </b>',\n      introduction3: 'To begin the study, please enter your name and click start. The first question will commence, and the timer will begin counting down.',\n      name: ''\n    }\n  },\n  methods: {\n    startQuestionnaire() {\n      // Code to start the questionnaire\n      if (this.name.trim() !== '') {\n        this.$router.push({name: 'report', params: {name: this.name}});\n        // this.$router.push({name: 'demo', params: {name: this.name}});\n      }\n    },\n    pracQuestionnaire () {\n      if (this.name.trim() !== '') {\n        // this.$router.push({name: 'report', params: {name: this.name}});\n        this.$router.push({name: 'demo', params: {name: this.name}});\n      }\n    }\n  }\n}\n</script>\n\n<style>\n/* Add your CSS styles here */\n.container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 70vh;\n}\n\n.intro {\n  width: 66.67%;\n  text-align: left;\n}\n\n.start {\n  font-size: 1.25rem;\n  margin-top: 1.5rem;\n  padding: 0.2rem 0.4rem;\n}\n\n.name_input {\n  margin-top: 1.5rem;\n  margin-bottom: 1rem;\n}\n</style>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;EACAA,IAAA,WAAAA,KAAA;IACA;MACAC,KAAA;MACAC,aAAA;MACAC,aAAA;MACAC,IAAA;IACA;EACA;EACAC,OAAA;IACAC,kBAAA,WAAAA,mBAAA;MACA;MACA,SAAAF,IAAA,CAAAG,IAAA;QACA,KAAAC,OAAA,CAAAC,IAAA;UAAAL,IAAA;UAAAM,MAAA;YAAAN,IAAA,OAAAA;UAAA;QAAA;QACA;MACA;IACA;IACAO,iBAAA,WAAAA,kBAAA;MACA,SAAAP,IAAA,CAAAG,IAAA;QACA;QACA,KAAAC,OAAA,CAAAC,IAAA;UAAAL,IAAA;UAAAM,MAAA;YAAAN,IAAA,OAAAA;UAAA;QAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}